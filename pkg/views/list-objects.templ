package views

import (
  "github.com/sgaunet/s3xplorer/pkg/config"
  "github.com/sgaunet/s3xplorer/pkg/dto"
  "fmt"
  "math"
)

// formatSize converts a size in bytes to a human-readable string with appropriate unit (bytes, KB, MB, GB, TB)
func formatSize(sizeInBytes int64) string {
  if sizeInBytes == 0 {
    return "0 Bytes"
  }
  
  units := []string{"Bytes", "KB", "MB", "GB", "TB", "PB"}
  base := float64(1024)
  
  // Get the unit index by dividing by 1024 repeatedly
  i := math.Floor(math.Log(float64(sizeInBytes)) / math.Log(base))
  
  // Cap the unit index to the maximum available unit
  if i >= float64(len(units)) {
    i = float64(len(units) - 1)
  }
  
  // Calculate the size in the selected unit
  size := float64(sizeInBytes) / math.Pow(base, i)
  
  // Format the output with one decimal place for values >= 1 KB, and no decimal for bytes
  if i == 0 {
    return fmt.Sprintf("%d %s", int64(size), units[int(i)])
  }
  return fmt.Sprintf("%.1f %s", size, units[int(i)])
}

templ RenderListObjects(folder string, objects []dto.S3Object, cfg config.Config) {
  <div class="container-fluid">
      <table class="table table-bordered table-light table-hover table-striped">
        <thead>
          <tr>
            <th>Actions</th>
            <th>Keys</th>
            <th>Size</th>
            <th>Etag</th>
            <th>Last Modified</th>
            <th>Storage Class</th>
          </tr>
        </thead>
        <tbody>
          for _, obj := range objects {
            <tr>
              <td>
                if obj.IsDownloadable {
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-download" viewBox="0 0 16 16">
                  <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z"/>
                  <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z"/>
                </svg>
                }

                if obj.IsRestoring {
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clock" viewBox="0 0 16 16">
                  <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z"/>
                  <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z"/>
                </svg>
                }

                if ! obj.IsRestoring {
                  if ! obj.IsDownloadable && cfg.S3.EnableGlacierRestore {
                  <a href="/restore?folder={ folder}&key={ obj.Key }">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-cloud-download" viewBox="0 0 16 16">
                      <path d="M4.406 1.342A5.53 5.53 0 0 1 8 0c2.69 0 4.923 2 5.166 4.579C14.758 4.804 16 6.137 16 7.773 16 9.569 14.502 11 12.687 11H10a.5.5 0 0 1 0-1h2.688C13.979 10 15 8.988 15 7.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 2.825 10.328 1 8 1a4.53 4.53 0 0 0-2.941 1.1c-.757.652-1.153 1.438-1.153 2.055v.448l-.445.049C2.064 4.805 1 5.952 1 7.318 1 8.785 2.23 10 3.781 10H6a.5.5 0 0 1 0 1H3.781C1.708 11 0 9.366 0 7.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383z"/>
                      <path d="M7.646 15.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 14.293V5.5a.5.5 0 0 0-1 0v8.793l-2.146-2.147a.5.5 0 0 0-.708.708l3 3z"/>
                    </svg>
                  </a>
                  }
                }
              </td>
                if obj.IsDownloadable {
                  <td>
                    <a href={ templ.URL(fmt.Sprintf("/download?key=%s",obj.Key)) }>{ obj.Key } </a>
                  </td>
                } else {
                  <td>
                    { obj.Key }
                  </td>
                }
              <td>
                { formatSize(obj.Size) }
              </td>
              <td>
                { obj.ETag }
              </td>
              <td>
                { obj.LastModified.Format("2006-01-02T15:04:05") } <br>
              </td>
              <td>
                { obj.StorageClass }
              </td>
            </tr>
          }
        </tbody>
      </table>
    </div>
}